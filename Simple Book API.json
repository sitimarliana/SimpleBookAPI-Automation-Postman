{
	"info": {
		"_postman_id": "2307a4e3-5abf-4589-9a94-eb7095046cae",
		"name": "Simple Book API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11352148"
	},
	"item": [
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion status code",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// extracting data from the response",
							"const response = pm.response.json();",
							"",
							"// assertion response body result extracting data",
							"pm.test(\"Status should be OK\", () => {",
							"    pm.expect(response.status).to.eql(\"OK\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": [
				{
					"name": "Status",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/status",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"status"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:14:41 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "15"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"f-v/Y1JusChTxrQUzPtNAKycooOTA\""
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"OK\"\n}"
				}
			]
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion status code",
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// extracting data from the response and save in variable global",
							"const response = pm.response.json();",
							"const authToken = response.accessToken;",
							"",
							"// saved token in variable global result extracting data",
							"pm.globals.set(\"authToken\", authToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clientName\": \"sitimarliana\",\n    \"clientEmail\": \"{{$randomEmail}}\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-clients/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": [
				{
					"name": "Register",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"clientName\": \"sitimarliana\",\n    \"clientEmail\": \"Gail28@yahoo.com\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://simple-books-api.glitch.me/api-clients/",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"api-clients",
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:15:52 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "82"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"52-4zOKBRAa6HjWdt3n/6+FcAOzksc\""
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"351ded2588f99ec7283b65d02a225f04dd8891d9c654b0068779b72c6bcf381c\"\n}"
				}
			]
		},
		{
			"name": "Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion status code",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// extraction data form the response",
							"const response = pm.response.json();",
							"const nonFictionBook = response.filter((book) => book.available == true)",
							"",
							"// choosee element result extraction data",
							"const book = nonFictionBook[0];",
							"",
							"// set variavle global for book ",
							"if (book) {",
							"    pm.globals.set(\"bookID\", book.id);",
							"}",
							"",
							"// assertion availability book , book as object, available as true, book as non-fiction",
							"pm.test(\"Book Found\", () => {",
							"pm.expect(book).to.be.an('object');",
							"pm.expect(book.available).to.be.true;",
							"pm.expect(book.available).to.eql(true);",
							"pm.expect(book.type).to.eql(\"non-fiction\");",
							"})",
							"",
							"",
							"pm.test(\"Status Sould be OK\"), () => {",
							" pm.expect(1).to.eql(2);",
							"}",
							"",
							"// console.log(response.status)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books?type=non-fiction",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "Books",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/books?type=non-fiction",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "type",
									"value": "non-fiction"
								},
								{
									"key": "limit",
									"value": "3",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:16:06 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "135"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"87-fbXCfgu0GEMnqcRoXq5fuhhKazw\""
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Just as I Am\",\n        \"type\": \"non-fiction\",\n        \"available\": false\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Untamed\",\n        \"type\": \"non-fiction\",\n        \"available\": true\n    }\n]"
				}
			]
		},
		{
			"name": "a single book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion status code",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// extraction data form the response",
							"const response = pm.response.json();",
							"",
							"// assertion data form extraction, validate current-stock, name, available",
							"pm.test(\"Single Book\", () => {",
							"    pm.expect(response['current-stock']).to.be.above(13);",
							"    pm.expect(response.name).to.eql(\"Untamed\");",
							"    pm.expect(response.available).to.eql(true);",
							"",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookID}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "a single book",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/books/:bookId",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "5"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:16:24 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "120"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"78-j/iSKeyVOvbJ1tvDEXM1nGhdATo\""
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 5,\n    \"name\": \"Untamed\",\n    \"author\": \"Glennon Doyle\",\n    \"type\": \"non-fiction\",\n    \"price\": 15.5,\n    \"current-stock\": 20,\n    \"available\": true\n}"
				}
			]
		},
		{
			"name": "Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion status code",
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// extraction data form the response",
							"const response = pm.response.json();",
							"const orderID = response.orderId;",
							"",
							"// pm.test(\"Status should be Created\", () => {",
							"//     pm.expect(response.status).to.eql();",
							"// });",
							"",
							"pm.globals.set(\"orderID\", orderID);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"{{$randomFullName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": [
				{
					"name": "Orders",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"Luis Roberts\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:16:41 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"32-HufGKKax5HLQrofngEIMcrPObhM\""
						}
					],
					"cookie": [],
					"body": "{\n    \"created\": true,\n    \"orderId\": \"UtUXCc52Q2s_XPRLRUyrX\"\n}"
				}
			]
		},
		{
			"name": "All Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"orderId\", response.orderId);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": [
				{
					"name": "All Orders",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:16:58 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "195"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"c3-/+rXNJ5lAW0xYqzZ+TTyzC6ZdiM\""
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"UtUXCc52Q2s_XPRLRUyrX\",\n        \"bookId\": 1,\n        \"customerName\": \"Kathleen Dibbert\",\n        \"createdBy\": \"7cfde2bc631444925cb984c11144a3ff55aa571d44fcba41f54bc5124c6962fc\",\n        \"quantity\": 1,\n        \"timestamp\": 1698239801540\n    }\n]"
				}
			]
		},
		{
			"name": "Detail Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion status code",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// extraction data form the response",
							"const response = pm.response.json();",
							"const id = response.id;",
							"",
							"// set variable global result extraction is id",
							"pm.globals.set(\"initialId\", id);",
							"",
							"// exraction data for variable global ",
							"const currentId = response.id;",
							"const initialId = pm.globals.get(\"initialId\");",
							"",
							"// assertion get detail order",
							"pm.test(\"Get detail order\", () => {",
							"    pm.expect(response.bookId).to.eql(1);",
							"    pm.expect(response.quantity).to.eql(1);",
							"    pm.expect(currentId).to.equal(initialId);",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderID}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Detail Order",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders/:orderId",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderID}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:17:14 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "193"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"c1-9qnv/uUKqjrKa/w20er47Z9ASto\""
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"UtUXCc52Q2s_XPRLRUyrX\",\n    \"bookId\": 1,\n    \"customerName\": \"Kathleen Dibbert\",\n    \"createdBy\": \"7cfde2bc631444925cb984c11144a3ff55aa571d44fcba41f54bc5124c6962fc\",\n    \"quantity\": 1,\n    \"timestamp\": 1698239801540\n}"
				}
			]
		},
		{
			"name": "Update Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion response code",
							"pm.test(\"Status code is 204\"), () => {",
							"    pm.response.to.have.status(204);",
							"    pm.response.to.have.status(\"No Content\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"customerName\": \"John {{$randomLastName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}//orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderID}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Update Order",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customerName\": \"John Anderson\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://simple-books-api.glitch.me//orders/:orderId",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"",
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderID}}"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:17:32 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// assertion response code",
							"pm.test(\"Status code is 204\"), () => {",
							"    pm.response.to.have.status(204);",
							"    pm.response.to.have.status(\"No Content\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderID}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Delete Order",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://simple-books-api.glitch.me/orders/:orderId",
							"protocol": "https",
							"host": [
								"simple-books-api",
								"glitch",
								"me"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderID}}"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 25 Oct 2023 13:17:48 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-books-api.glitch.me",
			"type": "string"
		},
		{
			"key": "bookID",
			"value": "5",
			"type": "string"
		},
		{
			"key": "id",
			"value": "data",
			"type": "string"
		}
	]
}